{"ast":null,"code":"var _jsxFileName = \"F:\\\\Pre-Project\\\\countdown-Timer-main\\\\countdown-Timer-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [countdown, setCountdown] = useState(0);\n  const [intervalId, setIntervalId] = useState(null);\n  const handleKeyDown = e => {\n    if (e.keyCode === 13) {\n      // 13 is the code for the Enter key\n      const input = parseInt(e.target.value);\n      const time = isNaN(input) ? 0 : Math.floor(input);\n      setCountdown(time);\n      e.target.value = '';\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n      if (time > 0) {\n        const id = setInterval(() => {\n          setCountdown(prev => {\n            const newCountdown = prev - 1;\n            if (newCountdown < 0) {\n              clearInterval(id);\n              return 0;\n            }\n            return newCountdown;\n          });\n        }, 1000);\n        setIntervalId(id);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Enter Time : \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: \"timeCount\",\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"current-time\",\n      children: countdown > 9 ? countdown : \"0\" + countdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aF3cJWMUFPuK0BJwY2TD6SVxmfo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","countdown","setCountdown","intervalId","setIntervalId","handleKeyDown","e","keyCode","input","parseInt","target","value","time","isNaN","Math","floor","clearInterval","id","setInterval","prev","newCountdown","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onKeyDown","_c","$RefreshReg$"],"sources":["F:/Pre-Project/countdown-Timer-main/countdown-Timer-main/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport \"./App.css\"\n\nfunction App() {\n  const [countdown, setCountdown] = useState(0);\n  const [intervalId, setIntervalId] = useState(null);\n\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 13) { // 13 is the code for the Enter key\n      const input = parseInt(e.target.value);\n      const time = isNaN(input) ? 0 : Math.floor(input);\n      setCountdown(time);\n      e.target.value = '';\n\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n\n      if (time > 0) {\n        const id = setInterval(() => {\n          setCountdown((prev) => {\n            const newCountdown = prev - 1;\n            if (newCountdown < 0) {\n              clearInterval(id);\n              return 0;\n            }\n            return newCountdown;\n          });\n        }, 1000);\n\n        setIntervalId(id);\n      }\n    }\n  };\n\n  return (\n    <div className='container'>\n      <div>Enter Time : </div>\n      <input type=\"number\" id=\"timeCount\" onKeyDown={handleKeyDown} />\n\n      <div id=\"current-time\">{countdown>9?countdown:\"0\"+countdown}</div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMS,aAAa,GAAIC,CAAC,IAAK;IAC3B,IAAIA,CAAC,CAACC,OAAO,KAAK,EAAE,EAAE;MAAE;MACtB,MAAMC,KAAK,GAAGC,QAAQ,CAACH,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC;MACtC,MAAMC,IAAI,GAAGC,KAAK,CAACL,KAAK,CAAC,GAAG,CAAC,GAAGM,IAAI,CAACC,KAAK,CAACP,KAAK,CAAC;MACjDN,YAAY,CAACU,IAAI,CAAC;MAClBN,CAAC,CAACI,MAAM,CAACC,KAAK,GAAG,EAAE;MAEnB,IAAIR,UAAU,EAAE;QACda,aAAa,CAACb,UAAU,CAAC;MAC3B;MAEA,IAAIS,IAAI,GAAG,CAAC,EAAE;QACZ,MAAMK,EAAE,GAAGC,WAAW,CAAC,MAAM;UAC3BhB,YAAY,CAAEiB,IAAI,IAAK;YACrB,MAAMC,YAAY,GAAGD,IAAI,GAAG,CAAC;YAC7B,IAAIC,YAAY,GAAG,CAAC,EAAE;cACpBJ,aAAa,CAACC,EAAE,CAAC;cACjB,OAAO,CAAC;YACV;YACA,OAAOG,YAAY;UACrB,CAAC,CAAC;QACJ,CAAC,EAAE,IAAI,CAAC;QAERhB,aAAa,CAACa,EAAE,CAAC;MACnB;IACF;EACF,CAAC;EAED,oBACEnB,OAAA;IAAKuB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBxB,OAAA;MAAAwB,QAAA,EAAK;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACxB5B,OAAA;MAAO6B,IAAI,EAAC,QAAQ;MAACV,EAAE,EAAC,WAAW;MAACW,SAAS,EAAEvB;IAAc;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAEhE5B,OAAA;MAAKmB,EAAE,EAAC,cAAc;MAAAK,QAAA,EAAErB,SAAS,GAAC,CAAC,GAACA,SAAS,GAAC,GAAG,GAACA;IAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC9D;AAEV;AAAC1B,EAAA,CAxCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}